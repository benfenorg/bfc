<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="286d5541-8a20-4a7c-b1b4-cdbf92b0cce8" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/crates/sui-types/src/base_types_obc.rs" beforeDir="false" afterPath="$PROJECT_DIR$/crates/sui-types/src/base_types_obc.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/crates/sui-types/src/sui_serde.rs" beforeDir="false" afterPath="$PROJECT_DIR$/crates/sui-types/src/sui_serde.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/crates/sui-types/src/unit_tests/base_type_obc_tests.rs" beforeDir="false" afterPath="$PROJECT_DIR$/crates/sui-types/src/unit_tests/base_type_obc_tests.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/crates/sui-types/src/unit_tests/base_types_tests.rs" beforeDir="false" afterPath="$PROJECT_DIR$/crates/sui-types/src/unit_tests/base_types_tests.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sdk/wallet-adapter/site/pages/advanced/wallet-standard.mdx" beforeDir="false" afterPath="$PROJECT_DIR$/sdk/wallet-adapter/site/pages/advanced/wallet-standard.mdx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sdk/wallet-adapter/wallet-standard/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/sdk/wallet-adapter/wallet-standard/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="yethnetz" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/package.json" />
  </component>
  <component name="ProjectId" id="2Rpw7Y6tssLyseALrhqZyT6Jbqx" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/huangzhifang&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;pnpm&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;language.move&quot;
  }
}</component>
  <component name="RunManager" selected="Cargo.Test base_types_obc::base_type_obc_tests::tests::test_object_id_serde_json">
    <configuration name="Test base_types::base_types_tests::test_address_serde_human_readable" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package sui-types --lib base_types::base_types_tests::test_address_serde_human_readable -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test base_types::base_types_tests::test_object_id_serde_json" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package sui-types --lib base_types::base_types_tests::test_object_id_serde_json -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test base_types_obc::base_type_obc_tests::tests::test_object_id_serde_json" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package sui-types --lib base_types_obc::base_type_obc_tests::tests::test_object_id_serde_json -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests in 'sui-json-rpc'" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package sui-json-rpc" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests in 'sui-types'" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package sui-types" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="obc" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="obc" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Test base_types::base_types_tests::test_address_serde_human_readable" />
      <item itemvalue="Cargo.Test base_types::base_types_tests::test_object_id_serde_json" />
      <item itemvalue="Cargo.Test base_types_obc::base_type_obc_tests::tests::test_object_id_serde_json" />
      <item itemvalue="Cargo.Tests in 'sui-types'" />
      <item itemvalue="Cargo.Tests in 'sui-json-rpc'" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test base_types_obc::base_type_obc_tests::tests::test_object_id_serde_json" />
        <item itemvalue="Cargo.Test base_types::base_types_tests::test_object_id_serde_json" />
        <item itemvalue="Cargo.Test base_types::base_types_tests::test_address_serde_human_readable" />
        <item itemvalue="Cargo.Tests in 'sui-types'" />
        <item itemvalue="Cargo.Tests in 'sui-json-rpc'" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
    <option name="version" value="2" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>